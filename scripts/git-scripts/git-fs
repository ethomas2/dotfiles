#!/bin/bash
set -euxo pipefail

# archive method
# commit_or_branch=${1:-origin/develop}
# _tempdir=$(mktemp -d --suffix=-git-fs)
# git archive $commit_or_branch | tar -C $_tempdir -x
# echo $_tempdir

# clone method
_tempdir=$(mktemp -d -t 'git-fs')
branch_prefix="zzz-git-fs"
default_branch=${DEFAULT_GIT_BRANCH:-git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/@@'}
(
  commit_or_branch=${1:-$default_branch}
  is_branch=$(git branch | grep "$commit_or_branch" >/dev/null 2>&1; echo $?)
  if [ $is_branch != "0" ]; then
    branch="$branch_prefix-$commit_or_branch"
    echo "$commit_or_branch is not a branch, creating branch $branch"
    git br "$branch" $commit_or_branch
  else
    echo "$commit_or_branch is already a branch. Proceeding"
    branch=$commit_or_branch
  fi
  echo $is_branch
  remote_url=$(git remote get-url origin)
  local_url=$(pwd)
  git clone --origin "local" --single-branch -b $branch $local_url $_tempdir
  (
    cd $_tempdir
    git remote add upstream $remote_url
    git remote add origin $remote_url
    # git remote add local $local_url
  )
) >/dev/null
echo $_tempdir
